Дополнительные задания.

1.
Учимся разбивать задачу на подзадачи.

Дана строка с текстом.
Написать метод, который найдёт слово,
которое в тексте встречается больше всего раз.

Если несколько слов в тексте встречаются одинаково
максимальное число раз, то возвращаем то слово,
которое встречается в тексте первым.

class SkillDesksHomeWork.homework1.homeWork1.SkillDesksHomeWork.homeWork5.task1.SkillDesksHomeWork.homeWork5.task1.WordService {

    public String findMostFrequentWord(String text) {
           // напишите решение тут
           // если это необходимо то
           // смело создавайте дополнительные методы
    }

}

Конечно эту задачу можно решить в лоб не разбивая на более
маленькие подзадачи. В реальных проектах более сложные задачи
в лоб решать будет гораздо сложнее. Поэтому давайте учиться
разбивать наши задачи на более простые. Будем учиться применять
принцип разделяй и властвуй. Любую более сложную задачу можно
разбить на более маленькие подзадачи. Решать маленькие подзадачи
намного проще чем решать одну большую сложную задачу.

Подумайте на какие подзадачи можно разбить эту задачу?

Возьмите чистый лист бумаги и распишите каждую подзадачу в отдельности:
- как она будет называться и что будет делать,
- что ей надо передать на вход (какие параметры параметры),
- что будет возвращать в качестве результата.

Убедитесь, что вы сможете из решений всех подзадач
собрать решение главной задачи.

2.
Разработать класс PowerCalculator, который реализует единственный метод
для возведения заданного числа в указанную степень.

Название метода, список параметров и тип возвращаемого значения
придумайте самостоятельно согласно условию задачи.

Математическую операцию реализовать с использованием цикла.

Написать тестовые сценарии для класса PowerCalculator в классе PowerCalculatorTest.

Все тестовые сценарии должны отрабатывать без ошибок.

3.
Необходимо разработать класс "кредитная карта" CreditCard
с учетом инкапсуляции, которая обладает следующими характеристиками:

Свойства
-Номер карты
-Пин-код карты
-Баланс
-Кредитный лимит
-Задолженность по кредиту


Методы

-Зачисление средств на карту ("deposit")
-Снятие средств с карты ("withdraw")

При создании карты нужно указывать ее номер и пинкод.
Начальный баланс и задолженность по кредиту равны 0.
Кредитный лимит можно менять после создания карты.

Требования к снятию средств:
-При снятии средств с карты необходимо указывать пин-код и желаемую сумму;
-Если пин-коды не совпадают, операция по снятию денег должна быть отклонена;
-Деньги снимаются с карточного баланса. В случае, если их не хватает, остаток суммы нужно брать за счет задолженности по кредиту;
-Если сумма задолженности превышает кредитный лимит, операция по снятию денег должна быть отклонена;

Требования к зачислению средств:
-При зачислении средств на карту необходимо указывать пин-код и желаемую сумму;
-Если пин-коды не совпадают, операция по зачислению денег должна быть отклонена;
-В первую очередь зачисление покрывает задолженность по кредиту;
-Если задолженность по кредиту равна 0, то остаток средств зачисляется в счет баланса;

Написать тестовые сценарии для класса CreditCard в классе CreditCardTest.
Все тестовые сценарии должны отрабатывать без ошибок.
